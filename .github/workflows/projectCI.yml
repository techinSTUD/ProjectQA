name: Automated API tests using CI pipelines Postman with multi os

on: push

env:
  POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}

jobs:
  automated-api-tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # or 'zulu' or other distributions
          java-version: '17' # specify your Java version

      - name: Build with Maven
        run: mvn clean install

      - name: Start server
        run: |
          mvn spring-boot:run &
          # Wait for the server to be ready
          until curl -s http://localhost:8080 > /dev/null; do
            echo "Waiting for server..."
            sleep 2
          done
        shell: bash

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Newman
        run: |
          npm install -g newman newman-reporter-htmlextra

      - name: Fetch Postman collection
        run: |
          curl -X GET "https://api.getpostman.com/collections/36297517-ebd82604-6763-4115-9ff6-d37d84a5964e" \
            -H "X-Api-Key: ${POSTMAN_API_KEY}" -o collection.json
        shell: bash

      - name: Fetch Postman environment
        run: |
          curl -X GET "https://api.getpostman.com/environments/36297517-14fbf929-2ed6-40ec-be7c-b4fda99486eb" \
            -H "X-Api-Key: ${POSTMAN_API_KEY}" -o environment.json
        shell: bash

      - name: Run API test with Newman
        run: |
          newman run collection.json -e environment.json --reporters cli,htmlextra --reporter-htmlextra-export report-${{ matrix.os }}.html

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: newman-report-${{ matrix.os }}
          path: report-${{ matrix.os }}.html

